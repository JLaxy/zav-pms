package controllers.order;

import controllers.ParentController;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TextField;
import models.helpers.PopupDialog;
import models.order.DiscountCardModel;
import models.schemas.SeniorPwdId;
import models.schemas.User;
import enums.DiscountCardTypes.CardType;

public class NewDiscountCardController extends ParentController {

    @FXML
    private TextField idNumberField;
    @FXML
    private TextField fnameField;
    @FXML
    private TextField mnameField;
    @FXML
    private TextField lnameField;
    @FXML
    private TextField suffixField;
    @FXML
    private ComboBox<CardType> idTypeComboBox;

    private DiscountCardModel discountCardModel;
    private SelectDiscountCardController parentController;

    @FXML
    public void initialize(User selectedUser, SelectDiscountCardController selectDiscountCardController) {
        System.out.println("Initializing NewDiscountCardController...");
        this.parentController = selectDiscountCardController;
        if (this.zavPMSDB == null) {
            System.err.println("DBManager is null in NewDiscountCardController.");
            return;
        }
        this.discountCardModel = new DiscountCardModel(this.zavPMSDB);
        loadDiscountCardTypes();
    }

    private void loadDiscountCardTypes() {
        ObservableList<CardType> idTypes = FXCollections.observableArrayList(CardType.values());
        idTypeComboBox.setItems(idTypes);
    }

    @FXML
    private void save() {
        try {
            CardType selectedType = idTypeComboBox.getValue();
            if (selectedType == null) {
                PopupDialog.showErrorDialog(new Exception("ID Type is required."), this.getClass().getName());
                return;
            }

            String idNumber = idNumberField.getText();
            if (discountCardModel.isDiscountCardExists(idNumber)) {
                PopupDialog.showErrorDialog(new Exception("Discount card with this ID number already exists."), this.getClass().getName());
                return;
            }

            SeniorPwdId newCard = new SeniorPwdId(
                    0, // ID is auto-generated by the database
                    idNumber,
                    fnameField.getText(),
                    mnameField.getText(),
                    lnameField.getText(),
                    suffixField.getText(),
                    selectedType.getValue()
            );

            boolean success = discountCardModel.addNewDiscountCard(newCard);
            if (success) {
                PopupDialog.showInfoDialog("Success", "Discount card added successfully.");
                parentController.loadDiscountCards(); // Notify parent controller to refresh
                this.borderPaneRootSwitcher.exitPopUpDialog();
            } else {
                PopupDialog.showErrorDialog(new Exception("Failed to add discount card."), this.getClass().getName());
            }
        } catch (Exception e) {
            PopupDialog.showErrorDialog(e, this.getClass().getName());
        }
    }

    @FXML
    private void cancel() {
        this.borderPaneRootSwitcher.exitPopUpDialog();
    }

    @FXML
    private void goBack() {
        this.borderPaneRootSwitcher.goBack_BP();
    }
}
